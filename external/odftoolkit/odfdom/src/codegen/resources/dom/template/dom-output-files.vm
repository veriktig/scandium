##################################################################
## 
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
## 
##  http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##
##################################################################
<?xml version="1.0" encoding="UTF-8"?>
## Template to create the list of artefacts which are to be generated
##
## Documentation of template development can be found in local file
## src/main/resources/documentation/help.html
##
<filelist>
	<file path="org/odftoolkit/odfdom/dom/style/OdfStyleFamily.java" template="java-odfdom-stylefamily.vm" />
	<file path="org/odftoolkit/odfdom/dom/style/props/OdfStylePropertiesSet.java" template="java-odfdom-styleset.vm" />
	<file path="org/odftoolkit/odfdom/dom/DefaultElementVisitor.java" template="java-odfdom-element-visitor.vm" />
####<file path="org/odftoolkit/odfdom/pkg/DefaultAttributeVisitor.java" template="java-odfdom-attribute-visitor.vm" />
##
#foreach ($element in ${model.getElements().withoutMultiples()})
#if ($element != "*")
##
#set($classname = "${model.camelCase($element)}Element")
	<file path="org/odftoolkit/odfdom/dom/element/${model.extractNamespace($element)}/${classname}.java" context="$element" template="java-odfdom-element-template.vm" />
##
#end
#end
##
#foreach ($base in $javamodel.getBaseclasses())
##
#if ($base != "container" && $base != "style" && $base != "styleproperties")
#set($classname = "${model.camelCase($base)}ElementBase")
	<file path="org/odftoolkit/odfdom/dom/element/${model.extractNamespace($base)}/${classname}.java" context="$base" template="java-odfdom-elementbase-template.vm" />
#end
##
#end
##
#foreach ($attribute in ${model.getAttributes().withoutMultiples()})
#if ($attribute != "*")
##
#set($classname = "${model.camelCase($attribute)}Attribute")
	<file path="org/odftoolkit/odfdom/dom/attribute/${model.extractNamespace($attribute)}/${classname}.java" context="$attribute" template="java-odfdom-attribute-template.vm" />
#end
#end
##
#foreach ($attribute in ${model.getAttributes().withoutMultiples()})
#if ($attribute != "*")
##
#set($classname = "${model.camelCase($attribute)}Attribute")
	<file path="org/odftoolkit/odfdom/dom/attribute/${model.extractNamespace($attribute)}/${classname}.java" context="$attribute" template="java-odfdom-attribute-template.vm" />
#end
#end
##
#foreach ($styleelement in ${model.getElements().withoutMultiples()})
#if ($styleelement.getNamespace() == "style" && ${styleelement.getLocalName().endsWith("properties")})
#set ($properties=${styleelement.withMultiples().getAttributes()})
#if ($properties.size()>0)
	<file path="org/odftoolkit/odfdom/dom/style/props/Odf${model.camelCase(${styleelement.getLocalName()})}.java" context="$styleelement" template="java-odfdom-styleproperties.vm" />
#end
#end
#end
</filelist>
